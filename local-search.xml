<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>操作系统复习纲要</title>
    <link href="/2023/04/23/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E7%BA%B2%E8%A6%81/"/>
    <url>/2023/04/23/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%A4%8D%E4%B9%A0%E7%BA%B2%E8%A6%81/</url>
    
    <content type="html"><![CDATA[<p><em>这是一篇关于操作系统这门课程的总复习纲要，本文内容将随着时间变化而更新。</em></p><span id="more"></span><h1 id="数字通信"><a href="#数字通信" class="headerlink" title="数字通信"></a>数字通信</h1><h3 id="信道编码技术"><a href="#信道编码技术" class="headerlink" title="信道编码技术"></a>信道编码技术</h3><p>1.信道复用技术<br>2.多址技术：频分多址(FDMA) 时分多址(TDMA) 码分多址(CDMA) 空分多址(SDMA)</p><h1 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h1><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><p>协议：指通信双方多共同遵循的规则。<br>网路协议：计算机在网络中实现通信时必须遵循的规则和约定。</p><h3 id="OSI和TCP模型"><a href="#OSI和TCP模型" class="headerlink" title="OSI和TCP模型"></a>OSI和TCP模型</h3><p><img src="/images/ositcp.png" alt="OSI七层网络模型与TCP/IP四层网络模型"></p><h3 id="传输层主要协议"><a href="#传输层主要协议" class="headerlink" title="传输层主要协议"></a>传输层主要协议</h3><p>1.TCP(传输控制协议)：面向连接可靠传输。数据按次序，安全无重复地传递，用传输交换大量报文的情况。<br>2.UDP(用户数据报协议)：面向事物，简单，不可靠传输。高效率服务，用于一次传输交换少量报文。</p><h3 id="分层使问题能很好解决"><a href="#分层使问题能很好解决" class="headerlink" title="分层使问题能很好解决"></a>分层使问题能很好解决</h3><p>1.每一层相对独立。<br>2.对等层完成相应功能。<br>3.下一层为上一层提供服务。</p><h1 id="传输层协议"><a href="#传输层协议" class="headerlink" title="传输层协议"></a>传输层协议</h1><p>地位：用户功能的最低层，面向通信(数据传输)的最高层。</p><h3 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h3><p>进程之间的逻辑通信(TCP、UDP) IP:主机之间的逻辑通信<br>TCP报文单位 字节 Byte<br>两个对等传输实体在通信时传递的数据单位叫做【运输协议数据单元】TPDU<br>TCP传送的协议数据单位是【TCP报文段】 (在传输过程中会对每个字节编号)<br>UDP传送的协议数据单位是【UDP报文段】或【用户数据报】</p><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><p>概念：给应用程序保留各自的数据通道，实现同一时刻多项应用发送和接收。端口是报文队列来实现的。 （TSAP）</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>静态端口 (0~2^16)<br>动态端口 &gt;49151<br>其中静态端口是用作预留和注册的<br>音频、视频和普通数据使用UDP传输</p><h1 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h1><h3 id="表示方法"><a href="#表示方法" class="headerlink" title="表示方法"></a>表示方法</h3><p>点分十进制，8位为一个单位，32位进制数。</p><h3 id="IP地址的组成"><a href="#IP地址的组成" class="headerlink" title="IP地址的组成"></a>IP地址的组成</h3><p>网络号+主机号</p><h3 id="IP地址分类"><a href="#IP地址分类" class="headerlink" title="IP地址分类"></a>IP地址分类</h3><p>A类 1.x.x.x ~ 126.x.x.x<br>    大型网络 网络数少，主机多<br>    主机：2^24-2 网络号：2^7-2<br>B类 128.x.x.x ~ 191.x.x.x<br>    中型网络 主机：2^16-2 网络数：2^14<br>C类 192.x.x.x ~ 223.x.x.xx<br>    小型网络 主机：2^8-2 网络数：2^21<br>D类 用于组播，传递至多个目的地址<br>E类 保留地址，备将来使用</p><p>IPv6采用128位地址长度，几乎可以不受限制地提供地址</p><h1 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h1><h3 id="子网掩码分类"><a href="#子网掩码分类" class="headerlink" title="子网掩码分类"></a>子网掩码分类</h3><p>缺省子网掩码：网络位都为1 主机位都为零<br>A类：255.0.0.0<br>B类：255.255.0.0<br>C类：255.255.255.0</p><h3 id="子网划分后的IP组成"><a href="#子网划分后的IP组成" class="headerlink" title="子网划分后的IP组成"></a>子网划分后的IP组成</h3><p>网络号+子网号+子网主机号<br>A类：____ . ____ . ____ . ____<br>(第一个下划线就为网络号)</p><h3 id="子网划分步骤"><a href="#子网划分步骤" class="headerlink" title="子网划分步骤"></a>子网划分步骤</h3><p>1.将IP地址和子网掩码转换至二进制<br>2.将二进制IP地址与子网掩码作与运算，将其转换为十进制。</p><h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><h3 id="HTTP协议概念"><a href="#HTTP协议概念" class="headerlink" title="HTTP协议概念"></a>HTTP协议概念</h3><p>1.他是应用层协议。<br>2.HTML全称HyperTextMarkLanauage。中文是超文本标记语言。<br>3.作用：将HTML文档从WEB服务器传送到客户端浏览器。<br>4.它包含什么：超链接和多种多媒体标记语言。</p><h3 id="URL-统一资源定位器"><a href="#URL-统一资源定位器" class="headerlink" title="URL(统一资源定位器)"></a>URL(统一资源定位器)</h3><p>1.组成：协议、主机和端口(默认80端口)、文件名及路径<br>DNS&lt;–IP地址<br>(域名)<br>2.解析URL过程</p><ul><li>浏览器分析超链接的URL</li><li>浏览器向服务器请求解析IP地址</li><li>DNS将解析出的IP地址返回浏览器</li><li>浏览器向服务器建立TCP连接(默认80端口)</li><li>浏览器请求文档 GET &#x2F;index.html</li><li>服务器给出响应，将index.html发送给浏览器</li><li>释放TCP连接</li><li>浏览器显示index.html中的内容</li></ul><h3 id="HTTP连接方式"><a href="#HTTP连接方式" class="headerlink" title="HTTP连接方式"></a>HTTP连接方式</h3><p>1.持久性连接(效率高)<br>2.非持久性连接<br>3.无状态性(成本低)</p><h3 id="报文"><a href="#报文" class="headerlink" title="报文"></a>报文</h3><p>1.请求&#x2F;响应报文</p><ul><li>字段：ASCII码 (7位二进制数)</li></ul><p>2.方法<br>GET:从服务器获取一份文档<br>HEAD:只从服务器获取文档的首部<br>POST:向服务器发送需要处理的数据<br>PUT:将请求的主体部分储存到服务器上<br>TRACE:跟踪并查看报文在经过代理服务器后的变化<br>DELETE:删除WEB页面<br>CONNECT:用于代理服务器<br>OPTION:查询特定选项</p><p>3.组成</p><p><img src="/images/qqbw.jpg" alt="请求报文"> </p><p><img src="/images/xybw.jpg" alt="响应报文"></p><h3 id="HTTP代理"><a href="#HTTP代理" class="headerlink" title="HTTP代理"></a>HTTP代理</h3><p>1.作用：Web缓存或代理服务器<br>2.无需联网<br>3.优点：响应快，减少网路带宽</p><h1 id="CoAP-受限应用-协议"><a href="#CoAP-受限应用-协议" class="headerlink" title="CoAP(受限应用)协议"></a>CoAP(受限应用)协议</h1><p>1.特点：</p><ul><li>只能用于<em>物联网设备</em></li><li><em>UDP传输</em>,可靠传输</li><li>访问服务器的方法：PUT、GET、DELETE、POST (分别为更新某资源、获得某资源 、删除、创建)</li><li>CoAP：<em>二进制存储</em></li><li>IP多播</li><li>非长连接</li></ul><p>2.CoAP消息类型<br>CON–需要确认请求<br>NON–不需要确认请求<br>ACK–应答消息<br>RST–复位消息</p><p>3.CoAP消息格式<br>Head 消息头 1.Ver 版本 2.T 消息类型 3.TKL 保留位 4.Code 字节 5.MessageID 消息编号</p><p>4.CoAP的URL<br>1.协议部分：coap:&#x2F;&#x2F; 或 coas:&#x2F;&#x2F;<br>2.端口：默认5683<br>3.文件名后缀： .xml<br>举例： coap:&#x2F;&#x2F;example.com:5683&#x2F;~sensors&#x2F;temp.xml</p><h1 id="MQTT-消息队列遥测传输协议"><a href="#MQTT-消息队列遥测传输协议" class="headerlink" title="MQTT(消息队列遥测传输协议)"></a>MQTT(消息队列遥测传输协议)</h1><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>MQTT基于客户机(Client)&#x2F;服务器(Server) 发布&#x2F;订阅模式<br>适用于M2M(机器与机器)通信IoT</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.一对多的消息发布<br>2.对负载内容屏蔽<br>3.使用TCP&#x2F;IP进行网络连接<br>4.三种消息的发布服务质量:至多一次、至少一次、只有一次<br>5.容量小——降低网络连接量</p><h3 id="MQTT协议原理图"><a href="#MQTT协议原理图" class="headerlink" title="MQTT协议原理图"></a>MQTT协议原理图</h3><p><img src="/images/MQTT.jpg" alt="MQTT原理图"></p><h3 id="MQTT协议原理"><a href="#MQTT协议原理" class="headerlink" title="MQTT协议原理"></a>MQTT协议原理</h3><ul><li>Connect</li><li>Disconnect</li><li>Sub</li><li>UnSub</li><li>Publish</li></ul><h3 id="协议数据包"><a href="#协议数据包" class="headerlink" title="协议数据包"></a>协议数据包</h3><p>固定头、可变头、消息头</p><h3 id="服务质量"><a href="#服务质量" class="headerlink" title="服务质量"></a>服务质量</h3><p>1.QoS0:最多一次。特点：消息丢失重复。<br>2.QoS1:至少一次。特点：确保消息到达，但会重复。<br>3.QoS2：恰好一次。特点：只有一次，确保消息只有一次到达。</p><h3 id="遗嘱消息"><a href="#遗嘱消息" class="headerlink" title="遗嘱消息"></a>遗嘱消息</h3><p>服务器：</p><ul><li>I&#x2F;O输入&#x2F;输出错误或网络失败</li><li>服务器收到下线包(c-&gt;s)之前关闭网络</li></ul><p>客户端：</p><ul><li>在自定义的心跳时期失联</li><li>在发送线下包之前关闭网络连接</li></ul><h1 id="FTP协议"><a href="#FTP协议" class="headerlink" title="FTP协议"></a>FTP协议</h1><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>1.文件传输协议<br>2.用于两台计算机之间互传送文件<br>3.上载    本地—–&gt;远程<br>4.下载    远程—–&gt;本地</p><h3 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h3><p><img src="/images/FTP.jpg" alt="FTP工作模式"></p><h3 id="FTP传输方式"><a href="#FTP传输方式" class="headerlink" title="FTP传输方式"></a>FTP传输方式</h3><p>1.ACSII码(文本文件)<br>2.二进制码(文本和非文本文件)</p><h3 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h3><p><img src="/images/FTP1.jpg" alt="FTP工作方式"></p><h3 id="FTP工作原理"><a href="#FTP工作原理" class="headerlink" title="FTP工作原理"></a>FTP工作原理</h3><p>1.传输层：运用TCP协议<br>2.进程：</p><ul><li>主进程：接收新请求</li><li>从属请求：处理单个请求</li></ul><h3 id="FTP工作原理-连接"><a href="#FTP工作原理-连接" class="headerlink" title="FTP工作原理(连接)"></a>FTP工作原理(连接)</h3><p>控制连接：传输请求和应答。由客户端发起<br>数据传输连接：每传一个文件建立一次连接。传输文件由服务器发起</p>]]></content>
    
    
    <categories>
      
      <category>操作系统</category>
      
    </categories>
    
    
    <tags>
      
      <tag>操作系统</tag>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
